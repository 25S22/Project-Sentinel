Of course. Here is the complete, consolidated list of commands for your two-terminal demonstration.

On Defender VM: Initial Script Setup (Do this first)
Bash

# 1. Create the main firewall script
nano firewall-rules.sh

# 2. Paste this content, then save and exit (Ctrl+X, Y, Enter)
#!/bin/bash
iptables -F && iptables -X
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
iptables -A INPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
echo "[+] Firewall is now ACTIVE."

# 3. Make it executable
chmod +x firewall-rules.sh

# 4. Create the interactive website blocker script
nano block-website.sh

# 5. Paste this content, then save and exit
#!/bin/bash
if [[ "$1" == "--remove" ]]; then
    echo "Enter the website URL to UNBLOCK:"
    read -p "> " website
    ip=$(host $website | awk '/has address/ { print $4 }' | head -n 1)
    if [ -z "$ip" ]; then echo "Could not resolve IP for $website."; exit 1; fi
    echo "Removing DROP rule for $website ($ip)..."
    iptables -D OUTPUT -d $ip -j DROP
    echo "Rule removed."
    exit 0
fi
echo "Enter the website URL to BLOCK:"
read -p "> " website
ip=$(host $website | awk '/has address/ { print $4 }' | head -n 1)
if [ -z "$ip" ]; then echo "Could not resolve IP for $website."; exit 1; fi
echo "--- Pinging $website ($ip) BEFORE blocking... ---"
ping -c 2 $ip
echo "--- Adding DROP rule for $website ($ip)... ---"
iptables -A OUTPUT -d $ip -j DROP
echo "--- Pinging $website ($ip) AFTER blocking... ---"
ping -c 2 $ip
echo "Rule for $website has been added."

# 6. Make it executable
chmod +x block-website.sh
Demonstration Commands (Run these in order)
On Defender VM:
Bash

# 1. Disable Firewall
sudo iptables -P INPUT ACCEPT && sudo iptables -F
On Attacker VM:
Bash

# 2. Ping with Firewall OFF (Should work)
ping 192.168.10.3
On Defender VM:
Bash

# 3. Enable Firewall
sudo ./firewall-rules.sh
On Attacker VM:
Bash

# 4. Ping with Firewall ON (Should work)
ping 192.168.10.3
On Defender VM: Set Up Live Monitoring Dashboard
(Open two terminals side-by-side)

Bash

# 5. In Terminal 1: Watch live firewall counters
watch -n 1 sudo iptables -L -v -n
```bash
# 6. In Terminal 2: Watch live IDS alerts
sudo tail -f /var/log/suricata/fast.log
On Attacker VM:
Bash

# 7. Launch the simulated exploit to test the IDS
# (Watch both terminals on the Defender VM as you run this)
curl -A "() { :;}; /bin/bash" [http://192.168.10.3](http://192.168.10.3)
On Defender VM:
Bash

# 8. Run the interactive website blocker script
sudo ./block-website.sh
On Defender VM (After Demo):
Bash

# 9. To remove the rule created by the script
sudo ./block-website.sh --remove
